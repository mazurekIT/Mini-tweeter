<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">

    <!-- Ścieżka tego pliku   main/resources/META-INF/-->
    <!-- mozna w tej lokalizacji dodać folder i plik sql/data.sql w którym zapisujemy poczatkowo elementy w BD-->

    <persistence-unit name="tweeter">
        <properties>
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:mysql://localhost:3306/tweeter" />
            <!--#################################  zmień nazwę bazy danych ############################################-->

            <property name="javax.persistence.jdbc.user" value="root" />
            <property name=" javax.persistence.validation.mode" value="none" /> <!--mimo braku danych w obiektcie zapisze obiekt do BD-->
            <property name="javax.persistence.jdbc.password" value="coderslab" />
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.schema-generation.database.action"
                      value="drop-and-create"/>
            <!--#############powyższa wartość zmienia sposób tworzenia BD przy uruchomieniu###############-->
            <!--#######################################################################
            create - tworzy tabele na podstawie adnotacji encji, nie nadpisuje zmian
            none - nie wykonuje żadnych operacji
            drop-and-create - usunie a następnie utworzy
            drop - usunie elementy bazy danych zgodne z adnotacjami
            ##############################################################################-->


            <property name="javax.persistence.sql-load-script-source"
                      value="META-INF/sql/data.sql" />

            <property name="hibernate.show_sql" value="true"/><!--pokazuje zapytania do SQL-->
            <property name="hibernate.format_sql" value="true"/><!--foramtowanie powyższych zapytań-->

            <property name="hibernate.dialect"
                      value="org.hibernate.dialect.MySQL57Dialect" />
            <property name="hibernate.connection.useUnicode" value="true" />
            <property name="hibernate.connection.characterEncoding" value="utf8" />
            <property name="hibernate.connection.CharSet" value="utf8" />


        </properties></persistence-unit>
</persistence>



